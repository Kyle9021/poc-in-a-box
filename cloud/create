#!/bin/bash -e
# shellcheck disable=SC2015

function main() {
  
  cd "$(dirname "$0")" || { err "unable to change directory"; return 2; }
  err "$(basename "$PWD")"
  err "  creating"

  # shellcheck disable=SC2155
  export PATH="../bin/scripts:../bin/$(uname | tr '[:upper:]' '[:lower:]')/$(uname -m):$PATH"

  # shellcheck disable=SC1091
  [ -f settings ] && { source settings; }
  # shellcheck disable=SC1091
  [ -f ../settings ] && { source ../settings; }

  sanitycheck || { err "Failure creating $(basename "$PWD"); see above"; return $?; }

  _main || { err "Failure creating $(basename "$PWD"); see above"; return $?; }
  return 0
}

function _main() {

  local rc
  rc=0

  err "    - namespace tags"
  local id
  id=$(apoctl api list namespaces -n "/$TENANT" -f name=="/$TENANT/$CLOUD" | jq -r '.[].ID')
  [[ "$id" ]] && {
    #doit apoctl api update -n "/$TENANT" namespace "$id" -d '{ “tagPrefixes”: [ “app=”,"sim-account=” ] }'
    doit apoctl api update -n "/$TENANT" namespace "$id" -d "$(yq e '' "$PWD"/prisma/tagprefixes.yaml -j)"
  }

  err "    - SecOps policy"
  doit apoctl api import -n "/$TENANT/$CLOUD" --file "$PWD"/prisma/secops.yaml || rc=3

  err "    - RFC1918 network"
  doit apoctl api import -n "/$TENANT/$CLOUD" --file "$PWD"/prisma/rfc1918.yaml || rc=3

  err "    - Internet network"
  doit apoctl api import -n "/$TENANT/$CLOUD" --file "$PWD"/prisma/internet.yaml || rc=3

  [[ "$CLOUD_NTP" ]] && {
    err "    - NTP network & policy"
    # shellcheck disable=SC2086
    update prisma/ntp.yaml $CLOUD_NTP
    doit apoctl api import -n "/$TENANT/$CLOUD" --file "$PWD"/prisma/ntp.yaml || rc=3
  }

  [[ "$CLOUD_DNS" ]] && {
    err "    - DNS network & policy"
    # shellcheck disable=SC2086
    update prisma/dns.yaml $CLOUD_DNS
    doit apoctl api import -n "/$TENANT/$CLOUD" --file "$PWD"/prisma/dns.yaml || rc=3
  }

  [[ "$META_DATA_API" ]] && {
    err "    - MetaDataAPI network & policy"
    # shellcheck disable=SC2086
    update prisma/metadataapi.yaml $META_DATA_API
    doit apoctl api import -n "/$TENANT/$CLOUD" --file "$PWD"/prisma/metadataapi.yaml || rc=3
  }

  err "done"
  return "$rc" 
}

function update() {
  local node file
  file=$1
  clean "$file"
  shift
  # shellcheck disable=SC2068
  for node in $@; do
    yq -i e ".data.externalnetworks[0].entries += [\"$node\"]" "$file"
  done
}

function clean() {
  local file
  file=$1
  yq -i e "del(.data.externalnetworks[0].entries)" "$file"
}

function err() { echo "$@" 1>&2; }

main "$@"
