#!/bin/bash -e
# shellcheck disable=SC2015

function main() {
  
  cd "$(dirname "$0")" || { err "unable to change directory"; return 2; }
  err "$(basename "$PWD")"
  err "  deleting"

  # shellcheck disable=SC2155
  export PATH="../bin/scripts:../bin/$(uname | tr '[:upper:]' '[:lower:]')/$(uname -m):$PATH"

  # shellcheck disable=SC1091
  [ -f settings ] && { source settings; }
  # shellcheck disable=SC1091
  [ -f ../settings ] && { source ../settings; }

  sanitycheck || { err "Failure deleting $(basename "$PWD"); see above"; return $?; }

  _main || { err "Failure deleting $(basename "$PWD"); see above"; return $?; }
  return 0
}

function _main() {

  local rc
  rc=0

  for id in $(apoctl api -n "/$TENANT/$CLOUD" list externalnetwork -f "normalizedTags matches cicd-tennessee-$(basename "$PWD")" | jq -r '.[].ID'); do
    err "    - removing network $id"
    doit apoctl api delete externalnetwork -n "/$TENANT/$CLOUD" "$id" || rc=3
  done

  for id in $(apoctl api -n "/$TENANT/$CLOUD" list networkrulesetpolicy -f "normalizedTags matches cicd-tennessee-$(basename "$PWD")" | jq -r '.[].ID'); do
    err "    - removing policy $id"
    doit apoctl api delete networkrulesetpolicy -n "/$TENANT/$CLOUD" "$id" || rc=3
  done

  err "done"
  return "$rc" 
}

function err() { echo "$@" 1>&2; }

main "$@"